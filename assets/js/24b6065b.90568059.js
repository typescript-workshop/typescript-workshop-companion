"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[142],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},9864:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"atelier/selectionner-une-table","title":"Exercice 3","description":"Niveau de difficult\xe9 : \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f","source":"@site/docs/atelier/3-selectionner-une-table.md","sourceDirName":"atelier","slug":"/atelier/selectionner-une-table","permalink":"/typescript-workshop-companion/docs/atelier/selectionner-une-table","draft":false,"unlisted":false,"editUrl":"https://github.com/typescript-workshop/typescript-workshop-companion/tree/main/packages/create-docusaurus/templates/shared/docs/atelier/3-selectionner-une-table.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"context-builder","permalink":"/typescript-workshop-companion/docs/atelier/context-builder"},"next":{"title":"Exercice 4","permalink":"/typescript-workshop-companion/docs/atelier/selectionner-des-champs"}}');var i=t(4848),o=t(8453);const r={sidebar_position:3},c="Exercice 3",l={},a=[{value:"Indice 1",id:"indice-1",level:2},{value:"Indice 2",id:"indice-2",level:2},{value:"Solution",id:"solution",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"exercice-3",children:"Exercice 3"})}),"\n",(0,i.jsx)(n.p,{children:"Niveau de difficult\xe9 : \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f"}),"\n",(0,i.jsx)(n.p,{children:"\xc7a y est, nous avons cr\xe9\xe9 un contexte qui contient notre database \ud83c\udf89."}),"\n",(0,i.jsx)(n.p,{children:"Maintenant, nous vous proposons \xe0 partir du typage de notre database d'apprendre \xe0 s\xe9lectionner sp\xe9cifiquement une table de celle-ci. Pour cela il nous faudra jongler entre les typages de notre database, des tables et de la m\xe9thode selectFrom."}),"\n",(0,i.jsx)(n.p,{children:"Rendez-vous dans le fichier 3-selectionner-une-table.spec.dt.ts et db.ts pour l'impl\xe9mentation. \xc0 vous de jouer !"}),"\n",(0,i.jsx)(n.admonition,{title:"Ressources",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/typescript-workshop-companion/docs/typescript/generic",children:"Types g\xe9n\xe9riques"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/typescript-workshop-companion/docs/typescript/conditional-types",children:"Types conditionnels"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/typescript-workshop-companion/docs/typescript/keyof-lookup",children:"KeyOf & lookup"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/typescript-workshop-companion/docs/typescript/type-hierarchy",children:"Hi\xe9rarchie des types"})}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"indice-1",children:"Indice 1"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Avant de d\xe9plier pour afficher la solution, n'h\xe9sitez pas \xe0 nous solliciter ! "}),(0,i.jsxs)(n.p,{children:["Si l'on souhaite b\xe9n\xe9ficier d'autocompl\xe9tion en invoquant ",(0,i.jsx)(n.code,{children:"selectFrom"})," on peut inf\xe9rer les noms des tables disponibles \xe0 partir du type de notre ",(0,i.jsx)(n.code,{children:"Database"})," courante. Et la valeur adoss\xe9e \xe0 la cl\xe9 ",(0,i.jsx)(n.code,{children:"_db"})," du ",(0,i.jsx)(n.em,{children:"contexte"})," est justement de type ",(0,i.jsx)(n.code,{children:"Database"}),"."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type Database = {\nusers: UserTable;\ncompanies: CompanyTable;\n};\n\nconst context = buildContext<Database>();\ntype Context = typeof context;\n// Context = { _db: Database }\n"})}),(0,i.jsxs)(n.p,{children:["On peut acc\xe9der au type de ",(0,i.jsx)(n.code,{children:"_db"})," au moyen d'un ",(0,i.jsx)(n.em,{children:"lookup type"})," via le type de notre ",(0,i.jsx)(n.em,{children:"contexte"}),"."]})]}),"\n",(0,i.jsx)(n.h2,{id:"indice-2",children:"Indice 2"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Avant de d\xe9plier pour afficher la solution, n'h\xe9sitez pas \xe0 nous solliciter ! "}),(0,i.jsxs)(n.p,{children:["Ce qu'on peut imaginer serait d'extraire les noms des tables telles qu'elles existent dans la cl\xe9 ",(0,i.jsx)(n.code,{children:"_db"})," de notre ",(0,i.jsx)(n.em,{children:"contexte"}),"."]}),(0,i.jsxs)(n.p,{children:["Typiquement ici, les noms des tables auxquelles nous pourrions vouloir acc\xe9der sont les cl\xe9s de l'objet en valeur de la cl\xe9 ",(0,i.jsx)(n.code,{children:"_db"}),". Pour extraire les cl\xe9 d'un objet on dispose de l'op\xe9rateur ",(0,i.jsx)(n.code,{children:"keyof"}),"."]}),(0,i.jsx)(n.p,{children:"Par exemple:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'type ShopDatabase = {\n  products: ProductTable,\n  carts: CartTable\n}\n\ntype TableNames = keyof ShopDatabase // "items" | "baskets"\n\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Avant de d\xe9plier pour afficher la solution, n'h\xe9sitez pas \xe0 nous solliciter ! "}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'type EmptyContext<DB> = {\n  _db: DB;\n};\ntype AnyEmptyContext = EmptyContext<any>;\n\nexport const selectFrom = <\n  Ctx extends AnyEmptyContext,\n  TB extends keyof Ctx["_db"]\n>(\n  ctx: Ctx,\n  tableName: TB\n) => ({\n  ...ctx,\n  _operation: "select" as const,\n  _table: tableName,\n});\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);