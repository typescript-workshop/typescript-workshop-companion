"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[805],{2661:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Programme","href":"/typescript-workshop-companion/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Exercices","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Exercice 0","href":"/typescript-workshop-companion/docs/atelier/types-primitifs","docId":"atelier/types-primitifs","unlisted":false},{"type":"link","label":"Exercice 1","href":"/typescript-workshop-companion/docs/atelier/opaque","docId":"atelier/opaque","unlisted":false},{"type":"link","label":"Exercice 2","href":"/typescript-workshop-companion/docs/atelier/construire-le-contexte","docId":"atelier/construire-le-contexte","unlisted":false},{"type":"link","label":"Exercice 3","href":"/typescript-workshop-companion/docs/atelier/selectionner-une-table","docId":"atelier/selectionner-une-table","unlisted":false},{"type":"link","label":"Exercice 4","href":"/typescript-workshop-companion/docs/atelier/selectionner-des-champs","docId":"atelier/selectionner-des-champs","unlisted":false},{"type":"link","label":"Exercice 5","href":"/typescript-workshop-companion/docs/atelier/selectionner-tous-les-champs","docId":"atelier/selectionner-tous-les-champs","unlisted":false},{"type":"link","label":"Exercice 6","href":"/typescript-workshop-companion/docs/atelier/filtrer-des-lignes","docId":"atelier/filtrer-des-lignes","unlisted":false},{"type":"link","label":"Exercice 7","href":"/typescript-workshop-companion/docs/atelier/supprimer-des-lignes","docId":"atelier/supprimer-des-lignes","unlisted":false},{"type":"link","label":"Exercice 8","href":"/typescript-workshop-companion/docs/atelier/gestion-des-alias","docId":"atelier/gestion-des-alias","unlisted":false},{"type":"link","label":"Exercice 9","href":"/typescript-workshop-companion/docs/atelier/ameliorer-dx","docId":"atelier/ameliorer-dx","unlisted":false}],"href":"/typescript-workshop-companion/docs/category/exercices"},{"type":"category","label":"Les concepts TypeScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Typage structurel","href":"/typescript-workshop-companion/docs/typescript/typage-structurel","docId":"typescript/typage-structurel","unlisted":false},{"type":"link","label":"Hi\xe9rarchies des types","href":"/typescript-workshop-companion/docs/typescript/type-hierarchy","docId":"typescript/type-hierarchy","unlisted":false},{"type":"link","label":"Types par r\xe9f\xe9rences : Arrays, Tuples et Objets","href":"/typescript-workshop-companion/docs/typescript/types-par-references","docId":"typescript/types-par-references","unlisted":false},{"type":"link","label":"Affirmation de types et types sp\xe9ciaux","href":"/typescript-workshop-companion/docs/typescript/types-speciaux-affirmation-de-types","docId":"typescript/types-speciaux-affirmation-de-types","unlisted":false},{"type":"link","label":"Types g\xe9n\xe9riques","href":"/typescript-workshop-companion/docs/typescript/generic","docId":"typescript/generic","unlisted":false},{"type":"link","label":"Types primitifs","href":"/typescript-workshop-companion/docs/typescript/types-primitifs","docId":"typescript/types-primitifs","unlisted":false},{"type":"link","label":"Keyof","href":"/typescript-workshop-companion/docs/typescript/keyof-lookup","docId":"typescript/keyof-lookup","unlisted":false},{"type":"link","label":"Types conditionnels","href":"/typescript-workshop-companion/docs/typescript/conditional-types","docId":"typescript/conditional-types","unlisted":false},{"type":"link","label":"Mapped Types ou Types mapp\xe9s","href":"/typescript-workshop-companion/docs/typescript/mapped-types","docId":"typescript/mapped-types","unlisted":false},{"type":"link","label":"Les op\xe9rateurs, pr\xe9fixes et mots-cl\xe9s","href":"/typescript-workshop-companion/docs/typescript/operators","docId":"typescript/operators","unlisted":false},{"type":"link","label":"Template Literals","href":"/typescript-workshop-companion/docs/typescript/template-literal","docId":"typescript/template-literal","unlisted":false},{"type":"link","label":"Autres ressources","href":"/typescript-workshop-companion/docs/typescript/others","docId":"typescript/others","unlisted":false}],"href":"/typescript-workshop-companion/docs/category/les-concepts-typescript"}]},"docs":{"atelier/ameliorer-dx":{"id":"atelier/ameliorer-dx","title":"Exercice 9","description":"Pr\xeat.e.s pour le dernier exercice ? C\'est parti !","sidebar":"tutorialSidebar"},"atelier/construire-le-contexte":{"id":"atelier/construire-le-contexte","title":"Exercice 2","description":"Que serait une requ\xeate SQL sans database associ\xe9e et comment les repr\xe9senter en TypeScript ?","sidebar":"tutorialSidebar"},"atelier/filtrer-des-lignes":{"id":"atelier/filtrer-des-lignes","title":"Exercice 6","description":"\xcatre capable de s\xe9lectionner des lignes, c\'est bien, mais pouvoir les filtrer \xe7a serait canon, qu\'en pensez-vous ?","sidebar":"tutorialSidebar"},"atelier/gestion-des-alias":{"id":"atelier/gestion-des-alias","title":"Exercice 8","description":"Wow ! On peut maintenant supprimer des enregistrements de notre base de donn\xe9es \ud83c\udf89.","sidebar":"tutorialSidebar"},"atelier/opaque":{"id":"atelier/opaque","title":"Exercice 1","description":"Probl\xe8me du typage structurel","sidebar":"tutorialSidebar"},"atelier/selectionner-des-champs":{"id":"atelier/selectionner-des-champs","title":"Exercice 4","description":"Nous vous proposons de typer la fonction selectFields qui, \xe0 partir du typage de notre database, sera capable d\'inf\xe9rer les noms des champs qu\'il est possible de s\xe9lectionner au sein d\'une table.","sidebar":"tutorialSidebar"},"atelier/selectionner-tous-les-champs":{"id":"atelier/selectionner-tous-les-champs","title":"Exercice 5","description":"Notre builder de requ\xeate SQL progresse, nous sommes maintenant capables de s\xe9lectionner des champs d\'une table. Ceci \xe9tant qui n\'a jamais eu besoin de s\xe9lectionner tous les champs d\'une table ?","sidebar":"tutorialSidebar"},"atelier/selectionner-une-table":{"id":"atelier/selectionner-une-table","title":"Exercice 3","description":"\xc7a y est, nous avons cr\xe9\xe9 un contexte qui contient le type de notre database \ud83c\udf89.","sidebar":"tutorialSidebar"},"atelier/supprimer-des-lignes":{"id":"atelier/supprimer-des-lignes","title":"Exercice 7","description":"L\'objectif de cet atelier est de cr\xe9er un builder de requ\xeates SQL. Les exercices pr\xe9c\xe9dents nous ont permis de s\xe9lectionner, filtrer, mais nous ne sommes pas encore capables de s\xe9lectionner des donn\xe9es \xe0 supprimer, pourtant, \xe7a serait canon !","sidebar":"tutorialSidebar"},"atelier/types-primitifs":{"id":"atelier/types-primitifs","title":"Exercice 0","description":"Ce premier exercice a pour objectif de balayer les concepts de bases de TypeScript et les diff\xe9rentes syntaxes qui existent. Nous commencerons \xe0 construire notre builder de requ\xeates SQL seulement dans l\'exercice 1.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Programme","description":"Qui n\u2019a jamais mis un type any, car il n\u2019arrivait pas \xe0 typer comme","sidebar":"tutorialSidebar"},"typescript/conditional-types":{"id":"typescript/conditional-types","title":"Types conditionnels","description":"Le systeme de type permet d\'ajouter des conditions afin de produire des types en fonctions de certaines conditions avec le mot-cl\xe9 extends","sidebar":"tutorialSidebar"},"typescript/generic":{"id":"typescript/generic","title":"Types g\xe9n\xe9riques","description":"Usage autour de la fonction \'identit\xe9\'","sidebar":"tutorialSidebar"},"typescript/keyof-lookup":{"id":"typescript/keyof-lookup","title":"Keyof","description":"L\'operateur keyof permet de recuperer les cl\xe9s d\'un type","sidebar":"tutorialSidebar"},"typescript/mapped-types":{"id":"typescript/mapped-types","title":"Mapped Types ou Types mapp\xe9s","description":"Comment cela fonctionne ?","sidebar":"tutorialSidebar"},"typescript/operators":{"id":"typescript/operators","title":"Les op\xe9rateurs, pr\xe9fixes et mots-cl\xe9s","description":"keyof","sidebar":"tutorialSidebar"},"typescript/others":{"id":"typescript/others","title":"Autres ressources","description":"- TS Reset","sidebar":"tutorialSidebar"},"typescript/template-literal":{"id":"typescript/template-literal","title":"Template Literals","description":"Literal types","sidebar":"tutorialSidebar"},"typescript/typage-structurel":{"id":"typescript/typage-structurel","title":"Typage structurel","description":"Pour savoir si deux types sont \xe9quivalents, il existe plusieurs syst\xe8mes de types. Par exemple, le langage C++ utilise le syst\xe8me de type nominatif, OCaml le syst\xe8me de duck typing.","sidebar":"tutorialSidebar"},"typescript/type-hierarchy":{"id":"typescript/type-hierarchy","title":"Hi\xe9rarchies des types","description":"On peut se repr\xe9senter le typage comme un arbre, plus on descend dans cet arbre, plus le type sera sp\xe9cifique.","sidebar":"tutorialSidebar"},"typescript/types-par-references":{"id":"typescript/types-par-references","title":"Types par r\xe9f\xe9rences : Arrays, Tuples et Objets","description":"Les arrays et les tuples","sidebar":"tutorialSidebar"},"typescript/types-primitifs":{"id":"typescript/types-primitifs","title":"Types primitifs","description":"TypeScript comprend plusieurs types primitifs :","sidebar":"tutorialSidebar"},"typescript/types-speciaux-affirmation-de-types":{"id":"typescript/types-speciaux-affirmation-de-types","title":"Affirmation de types et types sp\xe9ciaux","description":"Affirmation de type","sidebar":"tutorialSidebar"}}}}')}}]);