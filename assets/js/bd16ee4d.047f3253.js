"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[18],{8453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>c});var i=t(6540);const r={},o=i.createContext(r);function n(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(o.Provider,{value:s},e.children)}},9116:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"atelier/types-primitifs","title":"Exercice 0","description":"Ce premier exercice a pour objectif de balayer les concepts de bases de TypeScript et les diff\xe9rentes syntaxes qui existe. Nous commencerons \xe0 construire notre builder de requ\xeates SQL dans l\'exercice 1.","source":"@site/docs/atelier/0-types-primitifs.md","sourceDirName":"atelier","slug":"/atelier/types-primitifs","permalink":"/typescript-workshop-companion/docs/atelier/types-primitifs","draft":false,"unlisted":false,"editUrl":"https://github.com/typescript-workshop/typescript-workshop-companion/tree/main/packages/create-docusaurus/templates/shared/docs/atelier/0-types-primitifs.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Exercices","permalink":"/typescript-workshop-companion/docs/category/exercices"},"next":{"title":"Exercice 1","permalink":"/typescript-workshop-companion/docs/atelier/opaque"}}');var r=t(4848),o=t(8453);const n={sidebar_position:0},c="Exercice 0",p={},a=[];function l(e){const s={a:"a",admonition:"admonition",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"exercice-0",children:"Exercice 0"})}),"\n",(0,r.jsx)(s.p,{children:"Ce premier exercice a pour objectif de balayer les concepts de bases de TypeScript et les diff\xe9rentes syntaxes qui existe. Nous commencerons \xe0 construire notre builder de requ\xeates SQL dans l'exercice 1."}),"\n",(0,r.jsx)(s.p,{children:"Nous allons balayer les types primitifs, les arrays, les tuples et les objets ainsi que les op\xe9rateurs keyof, lookup type et typeof. Par la suite nous allons r\xe9utiliser ces concepts, n'h\xe9sitez pas \xe0 nous appeler si vous souhaitez plus d'explications ou que l'on \xe9claircisse un point avec vous."}),"\n",(0,r.jsx)(s.admonition,{title:"Ressources",type:"tip",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/typescript-workshop-companion/docs/typescript/types-primitifs",children:"Types primitifs"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/typescript-workshop-companion/docs/typescript/types-par-references",children:"Types par r\xe9f\xe9rence"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/typescript-workshop-companion/docs/typescript/keyof-lookup",children:"keyof et lookup"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/typescript-workshop-companion/docs/typescript/types-speciaux-affirmation-de-types",children:"Affirmation de type et types sp\xe9ciaux"})}),"\n"]})})]})}function d(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);